<!-- 
Copyright (c) 2011, salesforce.com foundation, Inc.
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, 
are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, 
    this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, 
    this list of conditions and the following disclaimer in the documentation 
    and/or other materials provided with the distribution.
    * Neither the name of the salesforce.com foundation. nor the names of its contributors 
    may be used to endorse or promote products derived from this software 
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
OF THE POSSIBILITY OF SUCH DAMAGE.

Batch Entry Visualforce page 
by Salesforce.com Foundation
-->
<apex:page id="BatchEntrySettings" tabstyle="Batch_Entry_Settings__tab" controller="CTRL_BatchEntrySettings" action="{!initPage}">

<apex:PageBlock >
    <apex:sectionHeader title="Batch Data Entry" subtitle="Configuration & Settings" />
    <apex:Pagemessages />
    <apex:PageBlockSection columns="1">
        <apex:outputtext value="{!$Label.Batch_Entry_Help_Text}" style="font-style:italic;" />
    </apex:PageBlockSection>
    <apex:TabPanel switchtype="client" value="{!activetab}" >
    <apex:tab label="Field Mappings" name="fieldmapping">
    <apex:outputText value="{!$Label.Create_Setting_Help_Text}" />
    <apex:form >
    <apex:outputPanel id="existingSettingsList">  
        <apex:PageBlockSection columns="1" title="Existing Settings" collapsible="false">
            <apex:pageBlockTable var="besetting" value="{!bulkEntrySettings}" width="90%" >                   
                <apex:column >
                    <apex:facet name="header">Action</apex:facet>
                    <apex:commandLink value="edit" action="{!besetting.editItem}" styleclass="editLink" 
                        immediate="true" />&nbsp;|&nbsp;<apex:commandLink styleclass="delLink" value="del" action="{!besetting.deleteItem}" 
                        immediate="true" />
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Object</apex:facet>
                        {!besetting.mysetting.Name}
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Data Entry Fields</apex:facet>
                        {!besetting.mysetting.Object_Entry_Field_Set__c}
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Save List Fields</apex:facet>
                        {!besetting.mysetting.Object_List_Field_Set__c}
                    </apex:column>
              </apex:pageBlockTable>
        </apex:PageBlockSection>
        <apex:outputPanel style="text-align: center; display: block; margin-left:auto; margin-right:auto;">
            <apex:commandButton value="Create New Setting" action="{!createNew}" disabled="{!settingloaded}" /> 
        </apex:outputPanel>
    </apex:outputPanel>  
    </apex:form>
    
    <apex:form >
    
        <apex:actionFunction name="updateFieldLists" rerender="existingsettingslist,fieldlists, pbs1, pbs2, buttonblock" status="myStatus"/>
        <apex:PageBlockSection id="pbs1" title="{!if(activesetting.objectname == null, 'Create New Settings', IF(activesetting.SettingsListSize > 1, 'Create ' + activesetting.objectname + ' Settings', 'Edit ' + activesetting.objectname + ' Settings'))}" columns="1" collapsible="false" rendered="{!settingLoaded}" >
            <apex:actionStatus startText="Loading Fields..." id="myStatus" />
            <apex:PageBlockSectionItem >            
            <apex:outputLabel value="Object" />
            <apex:selectlist onchange="updateFieldLists();" size="1" multiselect="false" value="{!activesetting.objectname}">
                <apex:selectOptions value="{!activesetting.objectlist}"/>                 
            </apex:selectlist>
            </apex:PageBlockSectionItem>
        </apex:PageBlockSection>                        
        <apex:outputPanel id="fieldlists">
        <apex:PageBlockSection id="pbs2" columns="2" rendered="{!AND(activesetting.objectname != null, activesetting.objectname != '')}" >
            <apex:PageBlockSectionItem helpText="{!$Label.Entry_Field_Help_Text}">
                <apex:outputLabel value="Fields for Data Entry" />
                <apex:selectList value="{!activesetting.entrylist}" multiselect="true" size="10">
                        <apex:selectOptions value="{!activesetting.availableDEFields}" />
                </apex:selectList>
            </apex:PageBlockSectionItem>
            <apex:PageBlockSectionItem helpText="{!$Label.List_Field_Help_Text}">
                <apex:outputLabel value="Fields for Save List" />
                <apex:selectList value="{!activesetting.savelist}" multiselect="true" size="10">
                        <apex:selectOptions value="{!activesetting.availableListFields}" />
                </apex:selectList>
            </apex:PageBlockSectionItem>
        </apex:PageBlockSection>
        <apex:outputPanel style="text-align: center; display: block; margin-left:auto; margin-right:auto;">
                <apex:commandButton value="Save" action="{!saveSetting}" title="Save the current in-scope setting" rendered="{!AND(activesetting.objectname != null, activesetting.objectname != '')}"/>
                <apex:commandButton value="Cancel" action="{!cancel}" title="Cancel and reset page" rendered="{!settingloaded}" />
        </apex:outputPanel>
        </apex:outputPanel>        
    </apex:form>
    </apex:tab>
    <apex:tab label="Advanced Configuration" name="advancedconfig">
    <apex:form >
        <apex:outputpanel id="savedstate">
            <apex:PageBlockSection columns="2">
                <apex:PageBlockSectionItem helpText="{!$Label.Opportunity_Naming_Setting_Help_Text}">
                    <apex:outputLabel value="Automatically Name Opportunities" />
                    <apex:inputCheckBox value="{!beconfig.Opportunity_Naming__c}" disabled="{!NOT(editingConfig)}" />
                </apex:PageBlockSectionItem>
                <apex:PageBlockSectionItem helpText="{!$Label.NPSP_Setting_Help_Text}">
                    <apex:outputlabel value="Use NPSP Configuration" />
                    <apex:inputCheckBox value="{!beconfig.Has_NPSP__c}" disabled="{!OR(NOT(editingConfig),NOT(npspIsInstalled))}" />
                </apex:PageBlockSectionItem>
                <apex:PageBlockSectionItem helpText="{!$Label.Allow_Blank_Opportunity_Names_Setting_Help_Text}">
                    <apex:outputLabel value="Allow Blank Opportunity Names" />
                    <apex:inputCheckBox value="{!beconfig.Allow_Blank_Opportunity_Names__c}" disabled="{!NOT(editingConfig)}" />
                </apex:PageBlockSectionItem>
            </apex:PageBlockSection>        
        </apex:outputpanel>
        <apex:outputpanel style="text-align: center; display: block; margin-left:auto; margin-right:auto;" >
            <apex:commandButton value="Edit" action="{!editAdvancedSettings}" rendered="{!NOT(editingConfig)}" />            
            <apex:commandButton value="Save" action="{!saveAdvancedSettings}" rendered="{!editingConfig}" />
            <apex:commandButton value="Cancel" action="{!cancelAdvancedSettings}" rendered="{!editingConfig}"/>
        </apex:outputpanel>
    </apex:form>
    </apex:tab>
    <apex:tab label="Delete Batches" name="batchdeletetab">
    <apex:form >
    <apex:outputText value="{!$Label.Batch_Deletion_Help_Text}" />
    <apex:outputpanel id="deletepanel">
     <apex:pageBlockSection title="Existing Batches" columns="1" collapsible="false">
                <apex:pageBlockTable var="b" value="{!batchlist}" width="90%" >                
                    <apex:column > 
                        <apex:facet name="header">Action</apex:facet>
                        <a href="javascript:if (window.confirm('WARNING! Deleting the batch will not delete the items saved in the batch.  Are you sure?')) DeleteBatch('{!b.batch.Id}');">delete</a>
                        <!--<apex:commandLink value="delete" onclick="deleteBatch();" styleclass="editLink" immediate="true" />-->
                    </apex:column>
                    <apex:repeat value="{!$ObjectType.Batch__c.FieldSets.DeleteBatchListView}" var="c">
                    <apex:column value="{!b.batch[c]}"/>
                    </apex:repeat> 
                </apex:pageBlockTable>
            </apex:pageBlockSection>
            <apex:actionFunction action="{!DeleteBatch}" name="DeleteBatch" rerender="deletepanel">
                <apex:param name="batchid" value="" assignTo="{!selectedbatchid}"/>
            </apex:actionFunction>
    </apex:outputpanel>
    </apex:form>
    </apex:tab>
    </apex:TabPanel>
</apex:PageBlock> 
</apex:page>